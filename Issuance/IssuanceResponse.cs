using System.Text.Json;
using System.Text.Json.Serialization;

namespace Microsoft.Identity.VerifiedID.Issuance;
public class IssuanceResponse
{
    /// <summary>
    /// An autogenerated request ID. The callback uses the same request, allowing you to keep track of the issuance request and its callbacks.
    /// </summary>  
    [JsonPropertyName("requestId")]
    public string RequestId { get; set; }

    /// <summary>
    /// A URL that launches the authenticator app and starts the issuance process. 
    // You can present this URL to the user if they can't scan the QR code.
    /// </summary>  
    [JsonPropertyName("url")]
    public string Url { get; set; }

    /// <summary>
    /// Indicates when the response will expire.
    /// </summary>  
    [JsonPropertyName("expiry")]
    public int Expiry { get; set; }

    /// <summary>
    /// A QR code that user can scan to start the issuance flow.
    /// </summary>  
    [JsonPropertyName("qrCode")]
    public string QrCode { get; set; }

    /// <summary>
    /// Serialize this object into a string
    /// </summary>
    /// <returns></returns>
    public override string ToString()
    {
        return JsonSerializer.Serialize(this, new JsonSerializerOptions { WriteIndented = true });
    }

    /// <summary>
    /// Serialize this object into HTML string
    /// </summary>
    /// <returns></returns>
    public string ToHtml()
    {
        return this.ToString().Replace("\r\n", "<br>").Replace(" ", "&nbsp;");
    }

    /// <summary>
    /// Deserialize a JSON string into IssuanceResponse object
    /// </summary>
    /// <param name="JsonString">The JSON string to be loaded</param>
    /// <returns></returns>
    public static IssuanceResponse Parse(string JsonString)
    {
        return JsonSerializer.Deserialize<IssuanceResponse>(JsonString);
    }
}